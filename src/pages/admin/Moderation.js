import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle, } from "@/components/ui/card";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Badge } from "@/components/ui/badge";
import { Switch } from "@/components/ui/switch";
import { Label } from "@/components/ui/label";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue, } from "@/components/ui/select";
import { AlertTriangle, MessageSquare, Search, Shield, ThumbsDown, ThumbsUp, } from "lucide-react";
const flaggedMessages = [
    {
        id: "msg1",
        content: "I need help accessing my account but I forgot my password and security questions.",
        user: "john.doe@example.com",
        agent: "Support Agent",
        timestamp: "2024-05-20T14:32:00",
        reason: "Potential phishing attempt",
        severity: "medium",
        status: "pending",
    },
    {
        id: "msg2",
        content: "Can you help me find information about competitive products in the market?",
        user: "marketing@company.com",
        agent: "Sales Agent",
        timestamp: "2024-05-19T09:15:00",
        reason: "Competitive intelligence gathering",
        severity: "low",
        status: "approved",
    },
    {
        id: "msg3",
        content: "I'm extremely frustrated with your service and want to speak to a manager immediately!",
        user: "angry.customer@gmail.com",
        agent: "Support Agent",
        timestamp: "2024-05-18T16:45:00",
        reason: "Abusive language detected",
        severity: "high",
        status: "rejected",
    },
];
const AdminModeration = () => {
    return (_jsxs("div", { className: "container mx-auto py-8 max-w-7xl", children: [_jsx("h1", { className: "text-3xl font-bold mb-6", children: "Content Moderation" }), _jsxs(Tabs, { defaultValue: "flagged", className: "space-y-4", children: [_jsxs(TabsList, { children: [_jsx(TabsTrigger, { value: "flagged", children: "Flagged Content" }), _jsx(TabsTrigger, { value: "rules", children: "Moderation Rules" }), _jsx(TabsTrigger, { value: "settings", children: "Settings" }), _jsx(TabsTrigger, { value: "logs", children: "Audit Logs" })] }), _jsx(TabsContent, { value: "flagged", className: "space-y-4", children: _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsxs("div", { className: "flex justify-between items-center", children: [_jsxs("div", { children: [_jsx(CardTitle, { children: "Flagged Messages" }), _jsx(CardDescription, { children: "Review messages that have been flagged by the moderation system" })] }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsxs("div", { className: "relative", children: [_jsx(Search, { className: "absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground" }), _jsx(Input, { type: "search", placeholder: "Search messages...", className: "pl-8 w-[250px]" })] }), _jsxs(Select, { defaultValue: "all", children: [_jsx(SelectTrigger, { className: "w-[150px]", children: _jsx(SelectValue, { placeholder: "Filter by status" }) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "all", children: "All Statuses" }), _jsx(SelectItem, { value: "pending", children: "Pending" }), _jsx(SelectItem, { value: "approved", children: "Approved" }), _jsx(SelectItem, { value: "rejected", children: "Rejected" })] })] })] })] }) }), _jsx(CardContent, { children: _jsx("div", { className: "space-y-4", children: flaggedMessages.map((message) => (_jsx(Card, { children: _jsx(CardContent, { className: "p-4", children: _jsxs("div", { className: "flex flex-col space-y-4", children: [_jsxs("div", { className: "flex justify-between", children: [_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx(MessageSquare, { className: "h-4 w-4 text-muted-foreground" }), _jsx("span", { className: "text-sm font-medium", children: message.agent }), _jsx("span", { className: "text-sm text-muted-foreground", children: new Date(message.timestamp).toLocaleString() })] }), _jsx(Badge, { className: `${message.status === "pending" ? "bg-yellow-500" : message.status === "approved" ? "bg-green-500" : "bg-red-500"}`, children: message.status.charAt(0).toUpperCase() +
                                                                        message.status.slice(1) })] }), _jsx("div", { className: "bg-muted p-3 rounded-md", children: _jsx("p", { className: "text-sm", children: message.content }) }), _jsxs("div", { className: "flex justify-between items-center", children: [_jsxs("div", { children: [_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx(AlertTriangle, { className: `h-4 w-4 ${message.severity === "high" ? "text-red-500" : message.severity === "medium" ? "text-yellow-500" : "text-orange-300"}` }), _jsx("span", { className: "text-sm font-medium", children: message.reason }), _jsx(Badge, { variant: "outline", className: "text-xs", children: message.severity.toUpperCase() })] }), _jsxs("p", { className: "text-xs text-muted-foreground mt-1", children: ["From: ", message.user] })] }), _jsxs("div", { className: "flex space-x-2", children: [_jsxs(Button, { size: "sm", variant: "outline", children: [_jsx(Shield, { className: "h-4 w-4 mr-1" }), " Review"] }), _jsx(Button, { size: "sm", variant: "ghost", className: "text-green-600", children: _jsx(ThumbsUp, { className: "h-4 w-4" }) }), _jsx(Button, { size: "sm", variant: "ghost", className: "text-red-600", children: _jsx(ThumbsDown, { className: "h-4 w-4" }) })] })] })] }) }) }, message.id))) }) })] }) }), _jsx(TabsContent, { value: "rules", className: "space-y-4", children: _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Moderation Rules" }), _jsx(CardDescription, { children: "Configure the rules that trigger content moderation" })] }), _jsx(CardContent, { children: _jsxs("div", { className: "space-y-6", children: [_jsxs("div", { children: [_jsx("h3", { className: "font-medium mb-3", children: "Text Content Rules" }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex items-center justify-between p-3 border rounded-md", children: [_jsxs("div", { children: [_jsx("p", { className: "font-medium", children: "Profanity Filter" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Flag messages containing profanity or offensive language" })] }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsxs(Select, { defaultValue: "strict", children: [_jsx(SelectTrigger, { className: "w-[120px]", children: _jsx(SelectValue, { placeholder: "Level" }) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "mild", children: "Mild" }), _jsx(SelectItem, { value: "moderate", children: "Moderate" }), _jsx(SelectItem, { value: "strict", children: "Strict" })] })] }), _jsx(Switch, { id: "profanity-filter", defaultChecked: true })] })] }), _jsxs("div", { className: "flex items-center justify-between p-3 border rounded-md", children: [_jsxs("div", { children: [_jsx("p", { className: "font-medium", children: "Personal Information Detection" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Flag messages containing PII (emails, phone numbers, etc.)" })] }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsxs(Select, { defaultValue: "moderate", children: [_jsx(SelectTrigger, { className: "w-[120px]", children: _jsx(SelectValue, { placeholder: "Level" }) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "mild", children: "Mild" }), _jsx(SelectItem, { value: "moderate", children: "Moderate" }), _jsx(SelectItem, { value: "strict", children: "Strict" })] })] }), _jsx(Switch, { id: "pii-detection", defaultChecked: true })] })] }), _jsxs("div", { className: "flex items-center justify-between p-3 border rounded-md", children: [_jsxs("div", { children: [_jsx("p", { className: "font-medium", children: "Harmful Content Detection" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Flag potentially harmful instructions or guidance" })] }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsxs(Select, { defaultValue: "strict", children: [_jsx(SelectTrigger, { className: "w-[120px]", children: _jsx(SelectValue, { placeholder: "Level" }) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "mild", children: "Mild" }), _jsx(SelectItem, { value: "moderate", children: "Moderate" }), _jsx(SelectItem, { value: "strict", children: "Strict" })] })] }), _jsx(Switch, { id: "harmful-content", defaultChecked: true })] })] }), _jsxs("div", { className: "flex items-center justify-between p-3 border rounded-md", children: [_jsxs("div", { children: [_jsx("p", { className: "font-medium", children: "Sentiment Analysis" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Flag messages with extremely negative sentiment" })] }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsxs(Select, { defaultValue: "moderate", children: [_jsx(SelectTrigger, { className: "w-[120px]", children: _jsx(SelectValue, { placeholder: "Level" }) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "mild", children: "Mild" }), _jsx(SelectItem, { value: "moderate", children: "Moderate" }), _jsx(SelectItem, { value: "strict", children: "Strict" })] })] }), _jsx(Switch, { id: "sentiment-analysis", defaultChecked: true })] })] })] })] }), _jsxs("div", { children: [_jsx("h3", { className: "font-medium mb-3", children: "Custom Keywords" }), _jsxs("div", { className: "space-y-3", children: [_jsx(Textarea, { placeholder: "Enter keywords or phrases to flag, one per line", className: "min-h-[100px]", defaultValue: "confidential\\nsecret\\npassword\\ncredit card\\nsocial security" }), _jsx("div", { className: "flex justify-end", children: _jsx(Button, { variant: "outline", children: "Save Keywords" }) })] })] }), _jsxs("div", { children: [_jsx("h3", { className: "font-medium mb-3", children: "Dual-AI Review System" }), _jsxs("div", { className: "p-3 border rounded-md space-y-3", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "font-medium", children: "Enable Dual-AI Review" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Use a secondary AI to review flagged content" })] }), _jsx(Switch, { id: "dual-ai", defaultChecked: true })] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [_jsxs("div", { className: "space-y-2", children: [_jsx(Label, { htmlFor: "primary-ai", children: "Primary AI Model" }), _jsxs(Select, { defaultValue: "gpt-4o", children: [_jsx(SelectTrigger, { id: "primary-ai", children: _jsx(SelectValue, { placeholder: "Select model" }) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "gpt-4o", children: "GPT-4o" }), _jsx(SelectItem, { value: "claude-3-opus", children: "Claude 3 Opus" }), _jsx(SelectItem, { value: "gemini-pro", children: "Gemini Pro" })] })] })] }), _jsxs("div", { className: "space-y-2", children: [_jsx(Label, { htmlFor: "secondary-ai", children: "Secondary AI Model" }), _jsxs(Select, { defaultValue: "claude-3-sonnet", children: [_jsx(SelectTrigger, { id: "secondary-ai", children: _jsx(SelectValue, { placeholder: "Select model" }) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "gpt-4o", children: "GPT-4o" }), _jsx(SelectItem, { value: "claude-3-sonnet", children: "Claude 3 Sonnet" }), _jsx(SelectItem, { value: "gemini-pro", children: "Gemini Pro" })] })] })] })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "font-medium", children: "Human-in-the-loop for Disagreements" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Require human review when AI models disagree" })] }), _jsx(Switch, { id: "human-review", defaultChecked: true })] })] })] })] }) })] }) }), _jsx(TabsContent, { value: "settings", className: "space-y-4", children: _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Moderation Settings" }), _jsx(CardDescription, { children: "Configure general moderation settings and notifications" })] }), _jsxs(CardContent, { className: "space-y-6", children: [_jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "font-medium", children: "Auto-reject High Severity" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Automatically reject content flagged as high severity" })] }), _jsx(Switch, { id: "auto-reject", defaultChecked: true })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "font-medium", children: "Auto-approve Low Severity" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Automatically approve content flagged as low severity" })] }), _jsx(Switch, { id: "auto-approve" })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "font-medium", children: "Email Notifications" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Send email notifications for high severity flags" })] }), _jsx(Switch, { id: "email-notifications", defaultChecked: true })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "font-medium", children: "Dashboard Notifications" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Show notifications in the admin dashboard" })] }), _jsx(Switch, { id: "dashboard-notifications", defaultChecked: true })] })] }), _jsxs("div", { className: "space-y-2", children: [_jsx(Label, { htmlFor: "notification-emails", children: "Notification Recipients" }), _jsx(Input, { id: "notification-emails", placeholder: "Enter email addresses, separated by commas", defaultValue: "moderation@akii.ai, admin@akii.ai" })] }), _jsxs("div", { className: "space-y-2", children: [_jsx(Label, { htmlFor: "review-timeout", children: "Review Timeout (hours)" }), _jsx(Input, { id: "review-timeout", type: "number", defaultValue: "24", className: "w-[100px]" }), _jsx("p", { className: "text-xs text-muted-foreground mt-1", children: "Time before flagged content is automatically reviewed by the system" })] }), _jsx("div", { className: "flex justify-end", children: _jsx(Button, { children: "Save Settings" }) })] })] }) }), _jsx(TabsContent, { value: "logs", className: "space-y-4", children: _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsxs("div", { className: "flex justify-between items-center", children: [_jsxs("div", { children: [_jsx(CardTitle, { children: "Moderation Audit Logs" }), _jsx(CardDescription, { children: "View a history of all moderation actions" })] }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsxs("div", { className: "relative", children: [_jsx(Search, { className: "absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground" }), _jsx(Input, { type: "search", placeholder: "Search logs...", className: "pl-8 w-[250px]" })] }), _jsx(Button, { variant: "outline", children: "Export" })] })] }) }), _jsx(CardContent, { children: _jsx("div", { className: "overflow-x-auto", children: _jsxs("table", { className: "w-full", children: [_jsx("thead", { children: _jsxs("tr", { className: "border-b", children: [_jsx("th", { className: "text-left p-2", children: "Timestamp" }), _jsx("th", { className: "text-left p-2", children: "Action" }), _jsx("th", { className: "text-left p-2", children: "Content ID" }), _jsx("th", { className: "text-left p-2", children: "User" }), _jsx("th", { className: "text-left p-2", children: "Moderator" }), _jsx("th", { className: "text-left p-2", children: "Reason" })] }) }), _jsxs("tbody", { children: [_jsxs("tr", { className: "border-b", children: [_jsx("td", { className: "p-2 text-sm", children: "2024-05-20 14:45:12" }), _jsx("td", { className: "p-2 text-sm", children: _jsx(Badge, { className: "bg-red-500", children: "Rejected" }) }), _jsx("td", { className: "p-2 text-sm", children: "msg3" }), _jsx("td", { className: "p-2 text-sm", children: "angry.customer@gmail.com" }), _jsx("td", { className: "p-2 text-sm", children: "admin@akii.ai" }), _jsx("td", { className: "p-2 text-sm", children: "Abusive language" })] }), _jsxs("tr", { className: "border-b", children: [_jsx("td", { className: "p-2 text-sm", children: "2024-05-19 10:22:35" }), _jsx("td", { className: "p-2 text-sm", children: _jsx(Badge, { className: "bg-green-500", children: "Approved" }) }), _jsx("td", { className: "p-2 text-sm", children: "msg2" }), _jsx("td", { className: "p-2 text-sm", children: "marketing@company.com" }), _jsx("td", { className: "p-2 text-sm", children: "system" }), _jsx("td", { className: "p-2 text-sm", children: "Auto-approved (low severity)" })] }), _jsxs("tr", { className: "border-b", children: [_jsx("td", { className: "p-2 text-sm", children: "2024-05-18 09:15:47" }), _jsx("td", { className: "p-2 text-sm", children: _jsx(Badge, { className: "bg-yellow-500", children: "Flagged" }) }), _jsx("td", { className: "p-2 text-sm", children: "msg1" }), _jsx("td", { className: "p-2 text-sm", children: "john.doe@example.com" }), _jsx("td", { className: "p-2 text-sm", children: "system" }), _jsx("td", { className: "p-2 text-sm", children: "Potential phishing attempt" })] })] })] }) }) })] }) })] })] }));
};
export default AdminModeration;
