import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from "react";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle, } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Separator } from "@/components/ui/separator";
import { Smartphone, Settings, BarChart3, Code } from "lucide-react";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Switch } from "@/components/ui/switch";
import { Slider } from "@/components/ui/slider";
export default function MobileChat() {
    const [activeTab, setActiveTab] = useState("setup");
    const [agentStatus, setAgentStatus] = useState("draft"); // draft, active
    const [userCount, setUserCount] = useState(0);
    const [conversationCount, setConversationCount] = useState(0);
    const [satisfactionRate, setSatisfactionRate] = useState(0);
    // Simulate loading data
    useState(() => {
        // Check if we have a deployed mobile chat
        const isDeployed = localStorage.getItem("mobileChatDeployed") === "true";
        if (isDeployed) {
            setAgentStatus("active");
            setUserCount(867);
            setConversationCount(523);
            setSatisfactionRate(88);
        }
    });
    return (_jsxs("div", { className: "container mx-auto py-6 space-y-8", children: [_jsxs("div", { className: "flex flex-col space-y-2", children: [_jsx("h1", { className: "text-3xl font-bold tracking-tight", children: "Mobile Chat Agent" }), _jsx("p", { className: "text-muted-foreground", children: "Integrate AI chat capabilities into your iOS and Android mobile applications." })] }), _jsxs("div", { className: "grid grid-cols-1 gap-6 md:grid-cols-3", children: [_jsxs(Card, { children: [_jsxs(CardHeader, { className: "pb-3", children: [_jsx(CardTitle, { className: "text-lg font-medium", children: "Mobile Agent Status" }), _jsx(CardDescription, { children: "Current status of your mobile chat deployment" })] }), _jsxs(CardContent, { children: [_jsxs("div", { className: "flex items-center gap-2", children: [agentStatus === "draft" && (_jsx(Badge, { variant: "outline", className: "bg-amber-100 dark:bg-amber-900/30 text-amber-800 dark:text-amber-200 hover:bg-amber-100 hover:dark:bg-amber-900/30", children: "Not Deployed" })), agentStatus === "active" && (_jsx(Badge, { variant: "outline", className: "bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-200 hover:bg-green-100 hover:dark:bg-green-900/30", children: "Deployed" }))] }), _jsx(Separator, { className: "my-4" }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-sm text-muted-foreground", children: "Users" }), _jsx("span", { className: "text-sm font-medium", children: userCount })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-sm text-muted-foreground", children: "Conversations" }), _jsx("span", { className: "text-sm font-medium", children: conversationCount })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-sm text-muted-foreground", children: "Satisfaction" }), _jsxs("span", { className: "text-sm font-medium", children: [satisfactionRate, "%"] })] }), agentStatus === "active" && (_jsx("div", { className: "mt-4", children: _jsx(Button, { variant: "outline", size: "sm", className: "w-full", onClick: () => setActiveTab("setup"), children: "Edit Configuration" }) }))] })] })] }), _jsxs(Card, { className: "md:col-span-2", children: [_jsxs(CardHeader, { className: "pb-3", children: [_jsx(CardTitle, { className: "text-lg font-medium", children: "Mobile Preview" }), _jsx(CardDescription, { children: "Preview how your mobile chat will appear in your app" })] }), _jsx(CardContent, { className: "h-64 bg-gray-100 dark:bg-gray-800 rounded-md relative overflow-hidden", children: _jsxs("div", { className: "absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-[240px] h-[480px] bg-white dark:bg-gray-900 rounded-3xl border-8 border-gray-800 overflow-hidden shadow-xl", children: [_jsx("div", { className: "h-6 bg-gray-800" }), _jsx("div", { className: "h-full bg-gray-100 dark:bg-gray-800 p-2", children: _jsxs("div", { className: "h-full bg-white dark:bg-gray-900 rounded-lg flex flex-col", children: [_jsxs("div", { className: "p-2 border-b border-gray-200 dark:border-gray-700 flex items-center", children: [_jsx(Smartphone, { className: "h-4 w-4 mr-2 text-primary" }), _jsx("span", { className: "text-xs font-medium", children: "Akii Mobile Chat" })] }), _jsxs("div", { className: "flex-1 p-2 flex flex-col", children: [_jsx("div", { className: "bg-primary/10 self-start rounded-lg p-2 mb-2 max-w-[80%]", children: _jsx("p", { className: "text-[10px]", children: "Hi there! How can I help you today?" }) }), _jsx("div", { className: "bg-gray-100 dark:bg-gray-700 self-end rounded-lg p-2 mb-2 max-w-[80%]", children: _jsx("p", { className: "text-[10px]", children: "I need help with my account" }) }), _jsx("div", { className: "bg-primary/10 self-start rounded-lg p-2 max-w-[80%]", children: _jsx("p", { className: "text-[10px]", children: "I'd be happy to help with your account. What specific issue are you having?" }) })] }), _jsxs("div", { className: "p-2 border-t border-gray-200 dark:border-gray-700 flex", children: [_jsx("div", { className: "flex-1 bg-gray-100 dark:bg-gray-700 rounded-full h-6" }), _jsx("div", { className: "ml-2 h-6 w-6 rounded-full bg-primary flex items-center justify-center", children: _jsxs("svg", { xmlns: "http://www.w3.org/2000/svg", width: "12", height: "12", viewBox: "0 0 24 24", fill: "none", stroke: "currentColor", strokeWidth: "2", strokeLinecap: "round", strokeLinejoin: "round", className: "text-white", children: [_jsx("path", { d: "m22 2-7 20-4-9-9-4Z" }), _jsx("path", { d: "M22 2 11 13" })] }) })] })] }) })] }) })] })] }), _jsxs(Tabs, { value: activeTab, onValueChange: setActiveTab, className: "w-full", children: [_jsxs(TabsList, { className: "grid w-full grid-cols-3", children: [_jsxs(TabsTrigger, { value: "setup", className: "flex items-center gap-2", children: [_jsx(Settings, { className: "h-4 w-4" }), "Setup & Configuration"] }), _jsxs(TabsTrigger, { value: "analytics", className: "flex items-center gap-2", children: [_jsx(BarChart3, { className: "h-4 w-4" }), "Analytics"] }), _jsxs(TabsTrigger, { value: "integration", className: "flex items-center gap-2", children: [_jsx(Code, { className: "h-4 w-4" }), "SDK Integration"] })] }), _jsx(TabsContent, { value: "setup", className: "mt-6", children: _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Mobile Chat Configuration" }), _jsx(CardDescription, { children: "Customize how your mobile chat agent looks and behaves" })] }), _jsxs(CardContent, { className: "space-y-6", children: [_jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-6", children: [_jsxs("div", { className: "space-y-2", children: [_jsx(Label, { htmlFor: "agent-name", children: "Agent Name" }), _jsx(Input, { id: "agent-name", placeholder: "Akii Mobile Assistant" })] }), _jsxs("div", { className: "space-y-2", children: [_jsx(Label, { htmlFor: "welcome-message", children: "Welcome Message" }), _jsx(Input, { id: "welcome-message", placeholder: "Hi there! How can I help you today?" })] }), _jsxs("div", { className: "space-y-2", children: [_jsx(Label, { htmlFor: "primary-color", children: "Primary Color" }), _jsxs("div", { className: "flex space-x-2", children: [_jsx(Input, { id: "primary-color", type: "color", defaultValue: "#4f46e5", className: "w-12 h-9 p-1" }), _jsx(Input, { defaultValue: "#4f46e5", className: "flex-1" })] })] }), _jsxs("div", { className: "space-y-2", children: [_jsx(Label, { htmlFor: "platform", children: "Platform Support" }), _jsxs(Select, { defaultValue: "both", children: [_jsx(SelectTrigger, { id: "platform", children: _jsx(SelectValue, { placeholder: "Select platforms" }) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "ios", children: "iOS Only" }), _jsx(SelectItem, { value: "android", children: "Android Only" }), _jsx(SelectItem, { value: "both", children: "iOS & Android" })] })] })] })] }), _jsx(Separator, {}), _jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-lg font-medium", children: "Advanced Settings" }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-6", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "space-y-0.5", children: [_jsx(Label, { htmlFor: "history", children: "Conversation History" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Enable conversation history storage" })] }), _jsx(Switch, { id: "history" })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "space-y-0.5", children: [_jsx(Label, { htmlFor: "voice", children: "Voice Input" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Allow voice commands and dictation" })] }), _jsx(Switch, { id: "voice" })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "space-y-0.5", children: [_jsx(Label, { htmlFor: "files", children: "File Attachments" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Allow users to send files and images" })] }), _jsx(Switch, { id: "files" })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "space-y-0.5", children: [_jsx(Label, { htmlFor: "push", children: "Push Notifications" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Send notifications for new messages" })] }), _jsx(Switch, { id: "push" })] })] }), _jsx("div", { className: "space-y-3", children: _jsxs("div", { className: "space-y-1", children: [_jsxs("div", { className: "flex justify-between", children: [_jsx(Label, { htmlFor: "memory", children: "Memory Context (messages)" }), _jsx("span", { className: "text-sm text-muted-foreground", children: "10" })] }), _jsx(Slider, { defaultValue: [10], max: 50, step: 1, id: "memory" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Number of previous messages to include for context" })] }) })] }), _jsxs("div", { className: "flex justify-end space-x-2 pt-4", children: [_jsx(Button, { variant: "outline", children: "Reset to Defaults" }), _jsx(Button, { onClick: () => setAgentStatus("active"), children: agentStatus === "active" ? "Update Configuration" : "Deploy Mobile Chat" })] })] })] }) }), _jsx(TabsContent, { value: "analytics", className: "mt-6", children: _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Usage Analytics" }), _jsx(CardDescription, { children: "Track engagement and performance of your mobile chat agent" })] }), _jsx(CardContent, { children: _jsxs("div", { className: "space-y-8", children: [_jsxs("div", { className: "grid grid-cols-1 md:grid-cols-3 gap-6", children: [_jsxs(Card, { children: [_jsx(CardHeader, { className: "pb-2", children: _jsx(CardTitle, { className: "text-sm font-medium", children: "Total Users" }) }), _jsxs(CardContent, { children: [_jsx("div", { className: "text-2xl font-bold", children: userCount }), _jsx("p", { className: "text-xs text-muted-foreground", children: "+12% from last month" })] })] }), _jsxs(Card, { children: [_jsx(CardHeader, { className: "pb-2", children: _jsx(CardTitle, { className: "text-sm font-medium", children: "Conversations" }) }), _jsxs(CardContent, { children: [_jsx("div", { className: "text-2xl font-bold", children: conversationCount }), _jsx("p", { className: "text-xs text-muted-foreground", children: "+8% from last month" })] })] }), _jsxs(Card, { children: [_jsx(CardHeader, { className: "pb-2", children: _jsx(CardTitle, { className: "text-sm font-medium", children: "Satisfaction Rate" }) }), _jsxs(CardContent, { children: [_jsxs("div", { className: "text-2xl font-bold", children: [satisfactionRate, "%"] }), _jsx("p", { className: "text-xs text-muted-foreground", children: "+2% from last month" })] })] })] }), _jsxs("div", { className: "space-y-2", children: [_jsx("h3", { className: "text-lg font-medium", children: "Platform Distribution" }), _jsx("div", { className: "h-64 bg-muted rounded-md flex items-center justify-center", children: _jsx("p", { className: "text-muted-foreground", children: "Analytics charts will appear here once your agent is active" }) })] }), _jsxs("div", { className: "space-y-2", children: [_jsx("h3", { className: "text-lg font-medium", children: "Top User Queries" }), _jsx(Card, { children: _jsxs("div", { className: "divide-y", children: [_jsxs("div", { className: "p-4 flex justify-between items-center", children: [_jsx("span", { className: "font-medium", children: "How do I reset my password?" }), _jsx(Badge, { variant: "secondary", children: "18%" })] }), _jsxs("div", { className: "p-4 flex justify-between items-center", children: [_jsx("span", { className: "font-medium", children: "What are your business hours?" }), _jsx(Badge, { variant: "secondary", children: "14%" })] }), _jsxs("div", { className: "p-4 flex justify-between items-center", children: [_jsx("span", { className: "font-medium", children: "How do I track my order?" }), _jsx(Badge, { variant: "secondary", children: "11%" })] }), _jsxs("div", { className: "p-4 flex justify-between items-center", children: [_jsx("span", { className: "font-medium", children: "Can I change my subscription?" }), _jsx(Badge, { variant: "secondary", children: "9%" })] }), _jsxs("div", { className: "p-4 flex justify-between items-center", children: [_jsx("span", { className: "font-medium", children: "How do I contact support?" }), _jsx(Badge, { variant: "secondary", children: "7%" })] })] }) })] })] }) })] }) }), _jsx(TabsContent, { value: "integration", className: "mt-6", children: _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "SDK Integration" }), _jsx(CardDescription, { children: "Instructions for integrating the chat agent into your mobile applications" })] }), _jsxs(CardContent, { className: "space-y-6", children: [_jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-6", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-lg font-medium mb-2", children: "iOS Integration" }), _jsxs("div", { className: "bg-muted rounded-md p-4", children: [_jsx("p", { className: "text-sm mb-2", children: "1. Add the SDK to your project via Swift Package Manager:" }), _jsx("pre", { className: "bg-slate-950 text-slate-50 p-4 rounded-md overflow-x-auto text-xs", children: `// Package.swift
dependencies: [
    .package(url: "https://github.com/akii/mobile-chat-ios.git", from: "1.0.0")
]` }), _jsx("p", { className: "text-sm mt-4 mb-2", children: "2. Initialize the SDK in your app:" }), _jsx("pre", { className: "bg-slate-950 text-slate-50 p-4 rounded-md overflow-x-auto text-xs", children: `import AkiiMobileChat

// In your AppDelegate or SceneDelegate
AkiiMobileChat.initialize(
    apiKey: "${agentStatus === "active" ? "ak_" + Math.random().toString(36).substring(2, 15) : "YOUR_API_KEY"}",
    agentId: "${agentStatus === "active" ? "mc_" + Math.random().toString(36).substring(2, 10) : "YOUR_AGENT_ID"}"
)` }), _jsx("p", { className: "text-sm mt-4 mb-2", children: "3. Present the chat UI:" }), _jsx("pre", { className: "bg-slate-950 text-slate-50 p-4 rounded-md overflow-x-auto text-xs", children: `// In your view controller
let chatViewController = AkiiChatViewController()
present(chatViewController, animated: true)` })] })] }), _jsxs("div", { children: [_jsx("h3", { className: "text-lg font-medium mb-2", children: "Android Integration" }), _jsxs("div", { className: "bg-muted rounded-md p-4", children: [_jsx("p", { className: "text-sm mb-2", children: "1. Add the dependency to your build.gradle:" }), _jsx("pre", { className: "bg-slate-950 text-slate-50 p-4 rounded-md overflow-x-auto text-xs", children: `// build.gradle
dependencies {
    implementation 'ai.akii:mobile-chat:1.0.0'
}` }), _jsx("p", { className: "text-sm mt-4 mb-2", children: "2. Initialize the SDK in your Application class:" }), _jsx("pre", { className: "bg-slate-950 text-slate-50 p-4 rounded-md overflow-x-auto text-xs", children: `// In your Application class
AkiiMobileChat.initialize(
    context,
    "${agentStatus === "active" ? "ak_" + Math.random().toString(36).substring(2, 15) : "YOUR_API_KEY"}",
    "${agentStatus === "active" ? "mc_" + Math.random().toString(36).substring(2, 10) : "YOUR_AGENT_ID"}"
);` }), _jsx("p", { className: "text-sm mt-4 mb-2", children: "3. Launch the chat activity:" }), _jsx("pre", { className: "bg-slate-950 text-slate-50 p-4 rounded-md overflow-x-auto text-xs", children: `// In your activity
Intent intent = new Intent(this, AkiiChatActivity.class);
startActivity(intent);` })] })] })] }), _jsx("div", { className: "pt-4", children: _jsx(Button, { variant: "outline", className: "w-full", children: "Download Documentation" }) })] })] }) })] })] }));
}
