import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from "react";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle, } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Separator } from "@/components/ui/separator";
import { Settings, BarChart3, Code } from "lucide-react";
import WebChatSetup from "@/components/dashboard/web-chat/WebChatSetup";
import WebChatAnalytics from "@/components/dashboard/web-chat/WebChatAnalytics";
import WebChatPreview from "@/components/dashboard/web-chat/WebChatPreview";
export default function WebChat() {
    const [activeTab, setActiveTab] = useState("setup");
    const [chatStatus, setChatStatus] = useState("draft"); // draft, active
    const [visitorCount, setVisitorCount] = useState(0);
    const [conversationCount, setConversationCount] = useState(0);
    const [satisfactionRate, setSatisfactionRate] = useState(0);
    // Simulate loading data
    useState(() => {
        // Check if we have a deployed chat
        const isDeployed = localStorage.getItem("webChatDeployed") === "true";
        if (isDeployed) {
            setChatStatus("active");
            setVisitorCount(1245);
            setConversationCount(387);
            setSatisfactionRate(92);
        }
    });
    return (_jsxs("div", { className: "container mx-auto py-6 space-y-8", children: [_jsxs("div", { className: "flex flex-col space-y-2", children: [_jsx("h1", { className: "text-3xl font-bold tracking-tight", children: "Web Chat Agent" }), _jsx("p", { className: "text-muted-foreground", children: "Add your AI to any website with an embeddable chat widget." })] }), _jsxs("div", { className: "grid grid-cols-1 gap-6 md:grid-cols-3", children: [_jsxs(Card, { children: [_jsxs(CardHeader, { className: "pb-3", children: [_jsx(CardTitle, { className: "text-lg font-medium", children: "Web Chat Status" }), _jsx(CardDescription, { children: "Current status of your web chat deployment" })] }), _jsxs(CardContent, { children: [_jsxs("div", { className: "flex items-center gap-2", children: [chatStatus === "draft" && (_jsx(Badge, { variant: "outline", className: "bg-amber-100 dark:bg-amber-900/30 text-amber-800 dark:text-amber-200 hover:bg-amber-100 hover:dark:bg-amber-900/30", children: "Not Deployed" })), chatStatus === "active" && (_jsx(Badge, { variant: "outline", className: "bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-200 hover:bg-green-100 hover:dark:bg-green-900/30", children: "Deployed" }))] }), _jsx(Separator, { className: "my-4" }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-sm text-muted-foreground", children: "Visitors" }), _jsx("span", { className: "text-sm font-medium", children: visitorCount })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-sm text-muted-foreground", children: "Conversations" }), _jsx("span", { className: "text-sm font-medium", children: conversationCount })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-sm text-muted-foreground", children: "Satisfaction" }), _jsxs("span", { className: "text-sm font-medium", children: [satisfactionRate, "%"] })] }), chatStatus === "active" && (_jsx("div", { className: "mt-4", children: _jsx(Button, { variant: "outline", size: "sm", className: "w-full", onClick: () => setActiveTab("setup"), children: "Edit Configuration" }) }))] })] })] }), _jsxs(Card, { className: "md:col-span-2", children: [_jsxs(CardHeader, { className: "pb-3", children: [_jsx(CardTitle, { className: "text-lg font-medium", children: "Preview" }), _jsx(CardDescription, { children: "See how your web chat will appear on your website" })] }), _jsx(CardContent, { className: "h-64 bg-gray-100 dark:bg-gray-800 rounded-md relative overflow-hidden", children: _jsx(WebChatPreview, { chatName: "Akii Support", welcomeMessage: "Hello! I'm your AI assistant. How can I help you today?", primaryColor: "#4f46e5", position: "bottom-right", agentName: "Akii Assistant" }) })] })] }), _jsxs(Tabs, { value: activeTab, onValueChange: setActiveTab, className: "w-full", children: [_jsxs(TabsList, { className: "grid w-full grid-cols-3", children: [_jsxs(TabsTrigger, { value: "setup", className: "flex items-center gap-2", children: [_jsx(Settings, { className: "h-4 w-4" }), "Setup & Configuration"] }), _jsxs(TabsTrigger, { value: "analytics", className: "flex items-center gap-2", children: [_jsx(BarChart3, { className: "h-4 w-4" }), "Analytics"] }), _jsxs(TabsTrigger, { value: "code", className: "flex items-center gap-2", children: [_jsx(Code, { className: "h-4 w-4" }), "Integration Code"] })] }), _jsx(TabsContent, { value: "setup", className: "mt-6", children: _jsx(WebChatSetup, {}) }), _jsx(TabsContent, { value: "analytics", className: "mt-6", children: _jsx(WebChatAnalytics, {}) }), _jsx(TabsContent, { value: "code", className: "mt-6", children: _jsxs(Card, { className: "w-full shadow-sm", children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { className: "text-xl font-bold", children: "Integration Code" }), _jsx(CardDescription, { children: "Add this code to your website to embed the chat widget" })] }), _jsx(CardContent, { children: _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "rounded-md bg-muted p-4", children: [_jsx("h3", { className: "text-sm font-medium mb-2", children: "Website Embed Code" }), _jsx("p", { className: "text-xs text-muted-foreground mb-4", children: "Add this code to your website before the closing </body> tag." }), _jsx("pre", { className: "bg-slate-950 text-slate-50 p-4 rounded-md overflow-x-auto text-xs", children: `<script>
  (function(w, d, s, o, f, js, fjs) {
    w['AkiiWebChat'] = o;
    w[o] = w[o] || function() { (w[o].q = w[o].q || []).push(arguments) };
    js = d.createElement(s), fjs = d.getElementsByTagName(s)[0];
    js.id = o; js.src = f; js.async = 1; fjs.parentNode.insertBefore(js, fjs);
  }(window, document, 'script', 'akii', 'https://chat.akii.com/loader.js'));
  
  akii('init', {
    chatId: '${chatStatus === "active" ? "wc_" + Math.random().toString(36).substring(2, 10) : "YOUR_CHAT_ID"}',
    position: 'bottom-right',
    primaryColor: '#4f46e5',
    welcomeMessage: 'Hello! I\'m your AI assistant. How can I help you today?'
  });
</script>` }), _jsxs(Button, { className: "mt-4", variant: "secondary", children: [_jsxs("svg", { xmlns: "http://www.w3.org/2000/svg", width: "16", height: "16", viewBox: "0 0 24 24", fill: "none", stroke: "currentColor", strokeWidth: "2", strokeLinecap: "round", strokeLinejoin: "round", className: "mr-2", children: [_jsx("rect", { width: "14", height: "14", x: "8", y: "8", rx: "2", ry: "2" }), _jsx("path", { d: "M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2" })] }), "Copy Code"] })] }), _jsxs("div", { className: "rounded-md bg-muted p-4", children: [_jsx("h3", { className: "text-sm font-medium mb-2", children: "JavaScript API" }), _jsx("p", { className: "text-xs text-muted-foreground mb-4", children: "Control the chat widget programmatically using these methods." }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "bg-slate-950 text-slate-50 p-2 rounded-md overflow-x-auto text-xs", children: [_jsx("code", { children: "akii('open');" }), " - Open the chat widget"] }), _jsxs("div", { className: "bg-slate-950 text-slate-50 p-2 rounded-md overflow-x-auto text-xs", children: [_jsx("code", { children: "akii('close');" }), " - Close the chat widget"] }), _jsxs("div", { className: "bg-slate-950 text-slate-50 p-2 rounded-md overflow-x-auto text-xs", children: [_jsx("code", { children: "akii('toggle');" }), " - Toggle the chat widget"] }), _jsxs("div", { className: "bg-slate-950 text-slate-50 p-2 rounded-md overflow-x-auto text-xs", children: [_jsx("code", { children: "akii('setUser', { id: 'user123', name: 'John Doe', email: 'john@example.com' });" }), " ", "- Set user information"] })] })] }), _jsx("div", { className: "rounded-md border p-4 bg-amber-50 dark:bg-amber-900/30 dark:border-amber-700", children: _jsxs("div", { className: "flex", children: [_jsxs("svg", { xmlns: "http://www.w3.org/2000/svg", width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", stroke: "currentColor", strokeWidth: "2", strokeLinecap: "round", strokeLinejoin: "round", className: "text-amber-500 dark:text-amber-400 mr-2", children: [_jsx("path", { d: "M10.29 3.86 1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z" }), _jsx("line", { x1: "12", x2: "12", y1: "9", y2: "13" }), _jsx("line", { x1: "12", x2: "12.01", y1: "17", y2: "17" })] }), _jsxs("div", { children: [_jsx("h3", { className: "text-sm font-medium text-amber-800 dark:text-amber-200", children: "Important Note" }), _jsx("p", { className: "text-xs text-amber-700 dark:text-amber-300 mt-1", children: "Make sure to deploy your web chat before adding the code to your website. The chat widget will not work until it's deployed from the Setup tab." })] })] }) })] }) })] }) })] })] }));
}
