import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Card, CardContent, CardDescription, CardHeader, CardTitle, } from "../../ui/card";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "../../ui/tabs";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue, } from "../../ui/select";
import { Switch } from "../../ui/switch";
import { Input } from "../../ui/input";
import { Slider } from "../../ui/slider";
import { Globe, Mic, Brain, Clock, Users } from "lucide-react";
const AgentConfigSettings = ({ aiModels = [
    "GPT-4",
    "GPT-3.5",
    "Claude 3 Opus",
    "Claude 3 Sonnet",
    "Llama 3",
], languages = [
    "English",
    "Spanish",
    "French",
    "German",
    "Chinese",
    "Japanese",
    "Arabic",
], onSettingsChange = () => { }, }) => {
    return (_jsxs("div", { className: "w-full bg-background p-6 rounded-lg", children: [_jsx("h2", { className: "text-2xl font-bold mb-6", children: "Configure Agent Settings" }), _jsx("p", { className: "text-muted-foreground mb-8", children: "Customize how your AI agent behaves, processes information, and interacts with users." }), _jsxs(Tabs, { defaultValue: "model", className: "w-full", children: [_jsxs(TabsList, { className: "grid grid-cols-5 mb-8", children: [_jsx(TabsTrigger, { value: "model", children: "AI Model" }), _jsx(TabsTrigger, { value: "memory", children: "Memory" }), _jsx(TabsTrigger, { value: "language", children: "Language" }), _jsx(TabsTrigger, { value: "voice", children: "Voice" }), _jsx(TabsTrigger, { value: "handoff", children: "Handoff" })] }), _jsx(TabsContent, { value: "model", className: "space-y-6", children: _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(Brain, { className: "h-5 w-5" }), "AI Model Selection"] }), _jsx(CardDescription, { children: "Choose the AI model that powers your agent. More powerful models provide better responses but may cost more." })] }), _jsxs(CardContent, { className: "space-y-6", children: [_jsxs("div", { className: "space-y-2", children: [_jsx("label", { className: "text-sm font-medium", children: "Base Model" }), _jsxs(Select, { defaultValue: aiModels[0], children: [_jsx(SelectTrigger, { children: _jsx(SelectValue, { placeholder: "Select model" }) }), _jsx(SelectContent, { children: aiModels.map((model) => (_jsx(SelectItem, { value: model, children: model }, model))) })] })] }), _jsxs("div", { className: "space-y-2", children: [_jsx("label", { className: "text-sm font-medium", children: "Temperature" }), _jsx("div", { className: "pt-2", children: _jsx(Slider, { defaultValue: [0.7], max: 1, step: 0.1 }) }), _jsx("p", { className: "text-xs text-muted-foreground mt-1", children: "Lower values make responses more focused and deterministic. Higher values make responses more creative and varied." })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "space-y-0.5", children: [_jsx("label", { className: "text-sm font-medium", children: "Use Advanced Reasoning" }), _jsx("p", { className: "text-xs text-muted-foreground", children: "Enables multi-step reasoning for complex questions" })] }), _jsx(Switch, { defaultChecked: true })] })] })] }) }), _jsx(TabsContent, { value: "memory", className: "space-y-6", children: _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(Clock, { className: "h-5 w-5" }), "Memory Settings"] }), _jsx(CardDescription, { children: "Configure how your agent remembers past interactions and uses context." })] }), _jsxs(CardContent, { className: "space-y-6", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "space-y-0.5", children: [_jsx("label", { className: "text-sm font-medium", children: "Short-term Memory" }), _jsx("p", { className: "text-xs text-muted-foreground", children: "Remember context within a single conversation" })] }), _jsx(Switch, { defaultChecked: true })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "space-y-0.5", children: [_jsx("label", { className: "text-sm font-medium", children: "Long-term Memory" }), _jsx("p", { className: "text-xs text-muted-foreground", children: "Remember user preferences across conversations" })] }), _jsx(Switch, {})] }), _jsxs("div", { className: "space-y-2", children: [_jsx("label", { className: "text-sm font-medium", children: "Context Window (messages)" }), _jsx("div", { className: "pt-2", children: _jsx(Slider, { defaultValue: [10], min: 1, max: 20, step: 1 }) }), _jsx("p", { className: "text-xs text-muted-foreground mt-1", children: "Number of previous messages to include as context for the AI" })] }), _jsxs("div", { className: "space-y-2", children: [_jsx("label", { className: "text-sm font-medium", children: "Memory Type" }), _jsxs(Select, { defaultValue: "conversational", children: [_jsx(SelectTrigger, { children: _jsx(SelectValue, { placeholder: "Select memory type" }) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "conversational", children: "Conversational" }), _jsx(SelectItem, { value: "semantic", children: "Semantic" }), _jsx(SelectItem, { value: "episodic", children: "Episodic" }), _jsx(SelectItem, { value: "hybrid", children: "Hybrid" })] })] }), _jsx("p", { className: "text-xs text-muted-foreground mt-1", children: "Determines how your agent processes and recalls information" })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "space-y-0.5", children: [_jsx("label", { className: "text-sm font-medium", children: "Context-Aware Responses" }), _jsx("p", { className: "text-xs text-muted-foreground", children: "Enable agent to reference previous interactions intelligently" })] }), _jsx(Switch, { defaultChecked: true })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "space-y-0.5", children: [_jsx("label", { className: "text-sm font-medium", children: "User Preference Learning" }), _jsx("p", { className: "text-xs text-muted-foreground", children: "Automatically adapt to user preferences over time" })] }), _jsx(Switch, { defaultChecked: true })] }), _jsxs("div", { className: "space-y-2", children: [_jsx("label", { className: "text-sm font-medium", children: "Memory Retention Period" }), _jsxs(Select, { defaultValue: "indefinite", children: [_jsx(SelectTrigger, { children: _jsx(SelectValue, { placeholder: "Select retention period" }) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "session", children: "Current Session Only" }), _jsx(SelectItem, { value: "day", children: "24 Hours" }), _jsx(SelectItem, { value: "week", children: "1 Week" }), _jsx(SelectItem, { value: "month", children: "30 Days" }), _jsx(SelectItem, { value: "indefinite", children: "Indefinite" })] })] }), _jsx("p", { className: "text-xs text-muted-foreground mt-1", children: "How long the agent will remember user interactions" })] })] })] }) }), _jsx(TabsContent, { value: "language", className: "space-y-6", children: _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(Globe, { className: "h-5 w-5" }), "Language Settings"] }), _jsx(CardDescription, { children: "Configure language capabilities and preferences for your agent." })] }), _jsxs(CardContent, { className: "space-y-6", children: [_jsxs("div", { className: "space-y-2", children: [_jsx("label", { className: "text-sm font-medium", children: "Primary Language" }), _jsxs(Select, { defaultValue: languages[0], children: [_jsx(SelectTrigger, { children: _jsx(SelectValue, { placeholder: "Select language" }) }), _jsx(SelectContent, { children: languages.map((language) => (_jsx(SelectItem, { value: language, children: language }, language))) })] })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "space-y-0.5", children: [_jsx("label", { className: "text-sm font-medium", children: "Multilingual Support" }), _jsx("p", { className: "text-xs text-muted-foreground", children: "Allow agent to respond in multiple languages" })] }), _jsx(Switch, { defaultChecked: true })] }), _jsxs("div", { className: "space-y-2", children: [_jsx("label", { className: "text-sm font-medium", children: "Tone" }), _jsxs(Select, { defaultValue: "professional", children: [_jsx(SelectTrigger, { children: _jsx(SelectValue, { placeholder: "Select tone" }) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "professional", children: "Professional" }), _jsx(SelectItem, { value: "friendly", children: "Friendly" }), _jsx(SelectItem, { value: "casual", children: "Casual" }), _jsx(SelectItem, { value: "formal", children: "Formal" }), _jsx(SelectItem, { value: "technical", children: "Technical" })] })] })] })] })] }) }), _jsx(TabsContent, { value: "voice", className: "space-y-6", children: _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(Mic, { className: "h-5 w-5" }), "Voice Interaction"] }), _jsx(CardDescription, { children: "Configure voice capabilities for your agent." })] }), _jsxs(CardContent, { className: "space-y-6", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "space-y-0.5", children: [_jsx("label", { className: "text-sm font-medium", children: "Voice Input" }), _jsx("p", { className: "text-xs text-muted-foreground", children: "Allow users to speak to your agent" })] }), _jsx(Switch, { defaultChecked: true })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "space-y-0.5", children: [_jsx("label", { className: "text-sm font-medium", children: "Voice Output" }), _jsx("p", { className: "text-xs text-muted-foreground", children: "Allow your agent to speak responses" })] }), _jsx(Switch, { defaultChecked: true })] }), _jsxs("div", { className: "space-y-2", children: [_jsx("label", { className: "text-sm font-medium", children: "Voice Type" }), _jsxs(Select, { defaultValue: "neutral", children: [_jsx(SelectTrigger, { children: _jsx(SelectValue, { placeholder: "Select voice" }) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "neutral", children: "Neutral" }), _jsx(SelectItem, { value: "feminine", children: "Feminine" }), _jsx(SelectItem, { value: "masculine", children: "Masculine" }), _jsx(SelectItem, { value: "assistant", children: "Assistant" })] })] })] })] })] }) }), _jsx(TabsContent, { value: "handoff", className: "space-y-6", children: _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(Users, { className: "h-5 w-5" }), "Human Handoff"] }), _jsx(CardDescription, { children: "Configure when and how to transfer conversations to human agents." })] }), _jsxs(CardContent, { className: "space-y-6", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "space-y-0.5", children: [_jsx("label", { className: "text-sm font-medium", children: "Enable Human Handoff" }), _jsx("p", { className: "text-xs text-muted-foreground", children: "Allow conversations to be transferred to human agents" })] }), _jsx(Switch, { defaultChecked: true })] }), _jsxs("div", { className: "space-y-2", children: [_jsx("label", { className: "text-sm font-medium", children: "Handoff Trigger" }), _jsxs(Select, { defaultValue: "user_request", children: [_jsx(SelectTrigger, { children: _jsx(SelectValue, { placeholder: "Select trigger" }) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "user_request", children: "User Request" }), _jsx(SelectItem, { value: "keyword", children: "Specific Keywords" }), _jsx(SelectItem, { value: "sentiment", children: "Negative Sentiment" }), _jsx(SelectItem, { value: "complexity", children: "Complex Issues" }), _jsx(SelectItem, { value: "multiple_failures", children: "Multiple Failed Responses" })] })] })] }), _jsxs("div", { className: "space-y-2", children: [_jsx("label", { className: "text-sm font-medium", children: "Integration Service" }), _jsxs(Select, { defaultValue: "intercom", children: [_jsx(SelectTrigger, { children: _jsx(SelectValue, { placeholder: "Select service" }) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "intercom", children: "Intercom" }), _jsx(SelectItem, { value: "zendesk", children: "Zendesk" }), _jsx(SelectItem, { value: "crisp", children: "Crisp" }), _jsx(SelectItem, { value: "freshdesk", children: "Freshdesk" }), _jsx(SelectItem, { value: "custom", children: "Custom Webhook" })] })] })] }), _jsxs("div", { className: "space-y-2", children: [_jsx("label", { className: "text-sm font-medium", children: "Webhook URL (for custom integration)" }), _jsx(Input, { placeholder: "https://your-service.com/webhook" })] })] })] }) })] })] }));
};
export default AgentConfigSettings;
